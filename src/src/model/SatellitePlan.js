/**
 * Notehub API
 * The OpenAPI definition for the Notehub.io API.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: engineering@blues.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import DataUsage from "./DataUsage";

/**
 * The SatellitePlan model module.
 * @module model/SatellitePlan
 * @version 2.0.0
 */
class SatellitePlan {
  /**
   * Constructs a new <code>SatellitePlan</code>.
   * @alias module:model/SatellitePlan
   * @param activated {Number} Activation date of the satellite plan as Unix timestamp
   * @param ntnProvider {String} Non-Terrestrial Network provider name
   * @param psid {String} Provider-specific identifier for the satellite subscription
   */
  constructor(activated, ntnProvider, psid) {
    SatellitePlan.initialize(this, activated, ntnProvider, psid);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, activated, ntnProvider, psid) {
    obj["activated"] = activated;
    obj["ntn_provider"] = ntnProvider;
    obj["psid"] = psid;
  }

  /**
   * Constructs a <code>SatellitePlan</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SatellitePlan} obj Optional instance to populate.
   * @return {module:model/SatellitePlan} The populated <code>SatellitePlan</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SatellitePlan();

      if (data.hasOwnProperty("activated")) {
        obj["activated"] = ApiClient.convertToType(data["activated"], "Number");
      }
      if (data.hasOwnProperty("billable_bytes")) {
        obj["billable_bytes"] = DataUsage.constructFromObject(
          data["billable_bytes"]
        );
      }
      if (data.hasOwnProperty("last_updated")) {
        obj["last_updated"] = ApiClient.convertToType(
          data["last_updated"],
          "Number"
        );
      }
      if (data.hasOwnProperty("ntn_provider")) {
        obj["ntn_provider"] = ApiClient.convertToType(
          data["ntn_provider"],
          "String"
        );
      }
      if (data.hasOwnProperty("psid")) {
        obj["psid"] = ApiClient.convertToType(data["psid"], "String");
      }
    } else if (data === null) {
      return null;
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>SatellitePlan</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SatellitePlan</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of SatellitePlan.RequiredProperties) {
      if (!data[property]) {
        throw new Error(
          "The required field `" +
            property +
            "` is not found in the JSON data: " +
            JSON.stringify(data)
        );
      }
    }
    // validate the optional field `billable_bytes`
    if (data["billable_bytes"]) {
      // data not null
      DataUsage.validateJSON(data["billable_bytes"]);
    }
    // ensure the json data is a string
    if (
      data["ntn_provider"] &&
      !(
        typeof data["ntn_provider"] === "string" ||
        data["ntn_provider"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `ntn_provider` to be a primitive type in the JSON string but got " +
          data["ntn_provider"]
      );
    }
    // ensure the json data is a string
    if (
      data["psid"] &&
      !(typeof data["psid"] === "string" || data["psid"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `psid` to be a primitive type in the JSON string but got " +
          data["psid"]
      );
    }

    return true;
  }
}

SatellitePlan.RequiredProperties = ["activated", "ntn_provider", "psid"];

/**
 * Activation date of the satellite plan as Unix timestamp
 * @member {Number} activated
 */
SatellitePlan.prototype["activated"] = undefined;

/**
 * @member {module:model/DataUsage} billable_bytes
 */
SatellitePlan.prototype["billable_bytes"] = undefined;

/**
 * Time this plan information was last updated
 * @member {Number} last_updated
 */
SatellitePlan.prototype["last_updated"] = undefined;

/**
 * Non-Terrestrial Network provider name
 * @member {String} ntn_provider
 */
SatellitePlan.prototype["ntn_provider"] = undefined;

/**
 * Provider-specific identifier for the satellite subscription
 * @member {String} psid
 */
SatellitePlan.prototype["psid"] = undefined;

export default SatellitePlan;
