/**
 * Notehub API
 * The OpenAPI definition for the Notehub.io API.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: engineering@blues.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import DataUsage from "./DataUsage";

/**
 * The CellularPlan model module.
 * @module model/CellularPlan
 * @version 2.0.0
 */
class CellularPlan {
  /**
   * Constructs a new <code>CellularPlan</code>.
   * @alias module:model/CellularPlan
   */
  constructor() {
    CellularPlan.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>CellularPlan</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CellularPlan} obj Optional instance to populate.
   * @return {module:model/CellularPlan} The populated <code>CellularPlan</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CellularPlan();

      if (data.hasOwnProperty("activated")) {
        obj["activated"] = ApiClient.convertToType(data["activated"], "Number");
      }
      if (data.hasOwnProperty("data_usage")) {
        obj["data_usage"] = DataUsage.constructFromObject(data["data_usage"]);
      }
      if (data.hasOwnProperty("expires_at")) {
        obj["expires_at"] = ApiClient.convertToType(
          data["expires_at"],
          "Number"
        );
      }
      if (data.hasOwnProperty("iccid")) {
        obj["iccid"] = ApiClient.convertToType(data["iccid"], "String");
      }
      if (data.hasOwnProperty("imsi")) {
        obj["imsi"] = ApiClient.convertToType(data["imsi"], "String");
      }
      if (data.hasOwnProperty("last_updated")) {
        obj["last_updated"] = ApiClient.convertToType(
          data["last_updated"],
          "Number"
        );
      }
      if (data.hasOwnProperty("lifetime_used")) {
        obj["lifetime_used"] = ApiClient.convertToType(
          data["lifetime_used"],
          "Number"
        );
      }
      if (data.hasOwnProperty("plan_type")) {
        obj["plan_type"] = ApiClient.convertToType(data["plan_type"], "String");
      }
    } else if (data === null) {
      return null;
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>CellularPlan</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CellularPlan</code>.
   */
  static validateJSON(data) {
    // validate the optional field `data_usage`
    if (data["data_usage"]) {
      // data not null
      DataUsage.validateJSON(data["data_usage"]);
    }
    // ensure the json data is a string
    if (
      data["iccid"] &&
      !(typeof data["iccid"] === "string" || data["iccid"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `iccid` to be a primitive type in the JSON string but got " +
          data["iccid"]
      );
    }
    // ensure the json data is a string
    if (
      data["imsi"] &&
      !(typeof data["imsi"] === "string" || data["imsi"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `imsi` to be a primitive type in the JSON string but got " +
          data["imsi"]
      );
    }
    // ensure the json data is a string
    if (
      data["plan_type"] &&
      !(
        typeof data["plan_type"] === "string" ||
        data["plan_type"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `plan_type` to be a primitive type in the JSON string but got " +
          data["plan_type"]
      );
    }

    return true;
  }
}

/**
 * Unix timestamp of when the SIM was activated
 * @member {Number} activated
 */
CellularPlan.prototype["activated"] = undefined;

/**
 * @member {module:model/DataUsage} data_usage
 */
CellularPlan.prototype["data_usage"] = undefined;

/**
 * @member {Number} expires_at
 */
CellularPlan.prototype["expires_at"] = undefined;

/**
 * The Integrated Circuit Card Identifier of the SIM card
 * @member {String} iccid
 */
CellularPlan.prototype["iccid"] = undefined;

/**
 * IMSI of the SIM card
 * @member {String} imsi
 */
CellularPlan.prototype["imsi"] = undefined;

/**
 * Time this plan information was last updated
 * @member {Number} last_updated
 */
CellularPlan.prototype["last_updated"] = undefined;

/**
 * Total bytes used by this SIM
 * @member {Number} lifetime_used
 */
CellularPlan.prototype["lifetime_used"] = undefined;

/**
 * Description of the SIM plan type including data allowance, region, and validity period
 * @member {String} plan_type
 */
CellularPlan.prototype["plan_type"] = undefined;

export default CellularPlan;
