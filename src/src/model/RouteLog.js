/**
 * Notehub API
 * The OpenAPI definition for the Notehub.io API.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: engineering@blues.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The RouteLog model module.
 * @module model/RouteLog
 * @version 1.0.38
 */
class RouteLog {
  /**
   * Constructs a new <code>RouteLog</code>.
   * @alias module:model/RouteLog
   */
  constructor() {
    RouteLog.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>RouteLog</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RouteLog} obj Optional instance to populate.
   * @return {module:model/RouteLog} The populated <code>RouteLog</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new RouteLog();

      if (data.hasOwnProperty("attn")) {
        obj["attn"] = ApiClient.convertToType(data["attn"], "Boolean");
      }
      if (data.hasOwnProperty("date")) {
        obj["date"] = ApiClient.convertToType(data["date"], "String");
      }
      if (data.hasOwnProperty("duration")) {
        obj["duration"] = ApiClient.convertToType(data["duration"], "Number");
      }
      if (data.hasOwnProperty("event_uid")) {
        obj["event_uid"] = ApiClient.convertToType(data["event_uid"], "String");
      }
      if (data.hasOwnProperty("route_uid")) {
        obj["route_uid"] = ApiClient.convertToType(data["route_uid"], "String");
      }
      if (data.hasOwnProperty("status")) {
        obj["status"] = ApiClient.convertToType(data["status"], "String");
      }
      if (data.hasOwnProperty("text")) {
        obj["text"] = ApiClient.convertToType(data["text"], "String");
      }
      if (data.hasOwnProperty("url")) {
        obj["url"] = ApiClient.convertToType(data["url"], "String");
      }
    } else if (data === null) {
      return null;
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>RouteLog</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RouteLog</code>.
   */
  static validateJSON(data) {
    // ensure the json data is a string
    if (
      data["date"] &&
      !(typeof data["date"] === "string" || data["date"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `date` to be a primitive type in the JSON string but got " +
          data["date"]
      );
    }
    // ensure the json data is a string
    if (
      data["event_uid"] &&
      !(
        typeof data["event_uid"] === "string" ||
        data["event_uid"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `event_uid` to be a primitive type in the JSON string but got " +
          data["event_uid"]
      );
    }
    // ensure the json data is a string
    if (
      data["route_uid"] &&
      !(
        typeof data["route_uid"] === "string" ||
        data["route_uid"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `route_uid` to be a primitive type in the JSON string but got " +
          data["route_uid"]
      );
    }
    // ensure the json data is a string
    if (
      data["status"] &&
      !(typeof data["status"] === "string" || data["status"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `status` to be a primitive type in the JSON string but got " +
          data["status"]
      );
    }
    // ensure the json data is a string
    if (
      data["text"] &&
      !(typeof data["text"] === "string" || data["text"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `text` to be a primitive type in the JSON string but got " +
          data["text"]
      );
    }
    // ensure the json data is a string
    if (
      data["url"] &&
      !(typeof data["url"] === "string" || data["url"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `url` to be a primitive type in the JSON string but got " +
          data["url"]
      );
    }

    return true;
  }
}

/**
 * If true, an error was returned when routing
 * @member {Boolean} attn
 */
RouteLog.prototype["attn"] = undefined;

/**
 * The date of the logs.
 * @member {String} date
 */
RouteLog.prototype["date"] = undefined;

/**
 * The duration of the route in milliseconds
 * @member {Number} duration
 */
RouteLog.prototype["duration"] = undefined;

/**
 * The event UID.
 * @member {String} event_uid
 */
RouteLog.prototype["event_uid"] = undefined;

/**
 * The route UID.
 * @member {String} route_uid
 */
RouteLog.prototype["route_uid"] = undefined;

/**
 * The status of the event.
 * @member {String} status
 */
RouteLog.prototype["status"] = undefined;

/**
 * The response body of the route.
 * @member {String} text
 */
RouteLog.prototype["text"] = undefined;

/**
 * The URL of the route.
 * @member {String} url
 */
RouteLog.prototype["url"] = undefined;

export default RouteLog;
