/**
 * Notehub API
 * The OpenAPI definition for the Notehub.io API.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: engineering@blues.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import UploadMetadata from "./UploadMetadata";
import UserDfuStateMachineStatus from "./UserDfuStateMachineStatus";

/**
 * The UserDfuStateMachine model module.
 * @module model/UserDfuStateMachine
 * @version 1.0.32
 */
class UserDfuStateMachine {
  /**
   * Constructs a new <code>UserDfuStateMachine</code>.
   * @alias module:model/UserDfuStateMachine
   */
  constructor() {
    UserDfuStateMachine.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>UserDfuStateMachine</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserDfuStateMachine} obj Optional instance to populate.
   * @return {module:model/UserDfuStateMachine} The populated <code>UserDfuStateMachine</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UserDfuStateMachine();

      if (data.hasOwnProperty("status")) {
        obj["status"] = UserDfuStateMachineStatus.constructFromObject(
          data["status"]
        );
      }
      if (data.hasOwnProperty("created")) {
        obj["created"] = ApiClient.convertToType(data["created"], "Date");
      }
      if (data.hasOwnProperty("from_version")) {
        obj["from_version"] = ApiClient.convertToType(
          data["from_version"],
          "String"
        );
      }
      if (data.hasOwnProperty("metadata")) {
        obj["metadata"] = UploadMetadata.constructFromObject(data["metadata"]);
      }
    } else if (data === null) {
      return null;
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>UserDfuStateMachine</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserDfuStateMachine</code>.
   */
  static validateJSON(data) {
    // validate the optional field `status`
    if (data["status"]) {
      // data not null
      UserDfuStateMachineStatus.validateJSON(data["status"]);
    }
    // ensure the json data is a string
    if (
      data["from_version"] &&
      !(
        typeof data["from_version"] === "string" ||
        data["from_version"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `from_version` to be a primitive type in the JSON string but got " +
          data["from_version"]
      );
    }
    // validate the optional field `metadata`
    if (data["metadata"]) {
      // data not null
      UploadMetadata.validateJSON(data["metadata"]);
    }

    return true;
  }
}

/**
 * @member {module:model/UserDfuStateMachineStatus} status
 */
UserDfuStateMachine.prototype["status"] = undefined;

/**
 * @member {Date} created
 */
UserDfuStateMachine.prototype["created"] = undefined;

/**
 * @member {String} from_version
 */
UserDfuStateMachine.prototype["from_version"] = undefined;

/**
 * @member {module:model/UploadMetadata} metadata
 */
UserDfuStateMachine.prototype["metadata"] = undefined;

export default UserDfuStateMachine;
