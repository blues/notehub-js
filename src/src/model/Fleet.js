/**
 * Notehub API
 * The OpenAPI definition for the Notehub.io API.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: engineering@blues.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import FleetConnectivityAssurance from "./FleetConnectivityAssurance";

/**
 * The Fleet model module.
 * @module model/Fleet
 * @version 2.3.0
 */
class Fleet {
  /**
   * Constructs a new <code>Fleet</code>.
   * @alias module:model/Fleet
   * @param created {Date} RFC3339 timestamp in UTC
   * @param label {String} Fleet label
   * @param uid {String} Fleet UID
   */
  constructor(created, label, uid) {
    Fleet.initialize(this, created, label, uid);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, created, label, uid) {
    obj["created"] = created;
    obj["label"] = label;
    obj["uid"] = uid;
  }

  /**
   * Constructs a <code>Fleet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Fleet} obj Optional instance to populate.
   * @return {module:model/Fleet} The populated <code>Fleet</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Fleet();

      if (data.hasOwnProperty("connectivity_assurance")) {
        obj["connectivity_assurance"] =
          FleetConnectivityAssurance.constructFromObject(
            data["connectivity_assurance"]
          );
      }
      if (data.hasOwnProperty("created")) {
        obj["created"] = ApiClient.convertToType(data["created"], "Date");
      }
      if (data.hasOwnProperty("environment_variables")) {
        obj["environment_variables"] = ApiClient.convertToType(
          data["environment_variables"],
          { String: "String" }
        );
      }
      if (data.hasOwnProperty("label")) {
        obj["label"] = ApiClient.convertToType(data["label"], "String");
      }
      if (data.hasOwnProperty("smart_rule")) {
        obj["smart_rule"] = ApiClient.convertToType(
          data["smart_rule"],
          "String"
        );
      }
      if (data.hasOwnProperty("uid")) {
        obj["uid"] = ApiClient.convertToType(data["uid"], "String");
      }
      if (data.hasOwnProperty("watchdog_mins")) {
        obj["watchdog_mins"] = ApiClient.convertToType(
          data["watchdog_mins"],
          "Number"
        );
      }
    } else if (data === null) {
      return null;
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>Fleet</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Fleet</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of Fleet.RequiredProperties) {
      if (!data[property]) {
        throw new Error(
          "The required field `" +
            property +
            "` is not found in the JSON data: " +
            JSON.stringify(data)
        );
      }
    }
    // validate the optional field `connectivity_assurance`
    if (data["connectivity_assurance"]) {
      // data not null
      FleetConnectivityAssurance.validateJSON(data["connectivity_assurance"]);
    }
    // ensure the json data is a string
    if (
      data["label"] &&
      !(typeof data["label"] === "string" || data["label"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `label` to be a primitive type in the JSON string but got " +
          data["label"]
      );
    }
    // ensure the json data is a string
    if (
      data["smart_rule"] &&
      !(
        typeof data["smart_rule"] === "string" ||
        data["smart_rule"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `smart_rule` to be a primitive type in the JSON string but got " +
          data["smart_rule"]
      );
    }
    // ensure the json data is a string
    if (
      data["uid"] &&
      !(typeof data["uid"] === "string" || data["uid"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `uid` to be a primitive type in the JSON string but got " +
          data["uid"]
      );
    }

    return true;
  }
}

Fleet.RequiredProperties = ["created", "label", "uid"];

/**
 * @member {module:model/FleetConnectivityAssurance} connectivity_assurance
 */
Fleet.prototype["connectivity_assurance"] = undefined;

/**
 * RFC3339 timestamp in UTC
 * @member {Date} created
 */
Fleet.prototype["created"] = undefined;

/**
 * The environment variables for this device that have been set using the Notehub API or UI.
 * @member {Object.<String, String>} environment_variables
 */
Fleet.prototype["environment_variables"] = undefined;

/**
 * Fleet label
 * @member {String} label
 */
Fleet.prototype["label"] = undefined;

/**
 * JSONata expression that will be evaluated to determine device membership into this fleet, if the expression evaluates to a 1, the device will be included, if it evaluates to -1 it will be removed, and if it evaluates to 0 or errors it will be left unchanged.
 * @member {String} smart_rule
 */
Fleet.prototype["smart_rule"] = undefined;

/**
 * Fleet UID
 * @member {String} uid
 */
Fleet.prototype["uid"] = undefined;

/**
 * A watchdog timer is used to generate an event every N minutes of inactivity. 0 means no watchdog
 * @member {Number} watchdog_mins
 */
Fleet.prototype["watchdog_mins"] = undefined;

export default Fleet;
