/**
 * Notehub API
 * The OpenAPI definition for the Notehub.io API.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: engineering@blues.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The DataUsage model module.
 * @module model/DataUsage
 * @version 2.2.0
 */
class DataUsage {
  /**
   * Constructs a new <code>DataUsage</code>.
   * @alias module:model/DataUsage
   * @param kbRemaining {Number} Kilobytes remaining in the plan
   * @param kbTotal {Number} Total Kilobytes included in the plan
   * @param kbUsed {Number} Kilobytes used to date
   */
  constructor(kbRemaining, kbTotal, kbUsed) {
    DataUsage.initialize(this, kbRemaining, kbTotal, kbUsed);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, kbRemaining, kbTotal, kbUsed) {
    obj["kb_remaining"] = kbRemaining;
    obj["kb_total"] = kbTotal;
    obj["kb_used"] = kbUsed;
  }

  /**
   * Constructs a <code>DataUsage</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DataUsage} obj Optional instance to populate.
   * @return {module:model/DataUsage} The populated <code>DataUsage</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DataUsage();

      if (data.hasOwnProperty("kb_remaining")) {
        obj["kb_remaining"] = ApiClient.convertToType(
          data["kb_remaining"],
          "Number"
        );
      }
      if (data.hasOwnProperty("kb_total")) {
        obj["kb_total"] = ApiClient.convertToType(data["kb_total"], "Number");
      }
      if (data.hasOwnProperty("kb_used")) {
        obj["kb_used"] = ApiClient.convertToType(data["kb_used"], "Number");
      }
    } else if (data === null) {
      return null;
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DataUsage</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataUsage</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of DataUsage.RequiredProperties) {
      if (!data[property]) {
        throw new Error(
          "The required field `" +
            property +
            "` is not found in the JSON data: " +
            JSON.stringify(data)
        );
      }
    }

    return true;
  }
}

DataUsage.RequiredProperties = ["kb_remaining", "kb_total", "kb_used"];

/**
 * Kilobytes remaining in the plan
 * @member {Number} kb_remaining
 */
DataUsage.prototype["kb_remaining"] = undefined;

/**
 * Total Kilobytes included in the plan
 * @member {Number} kb_total
 */
DataUsage.prototype["kb_total"] = undefined;

/**
 * Kilobytes used to date
 * @member {Number} kb_used
 */
DataUsage.prototype["kb_used"] = undefined;

export default DataUsage;
