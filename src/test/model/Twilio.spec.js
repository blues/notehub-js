/**
 * Notehub API
 * The OpenAPI definition for the Notehub.io API. Trigger another beta deploy to npm
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: engineering@blues.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD.
    define(["expect.js", process.cwd() + "/src/index"], factory);
  } else if (typeof module === "object" && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require("expect.js"), require(process.cwd() + "/src/index"));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NotehubJs);
  }
})(this, function (expect, NotehubJs) {
  "use strict";

  var instance;

  beforeEach(function () {
    instance = new NotehubJs.Twilio();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === "function") return object[getter]();
    else return object[property];
  };

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === "function") object[setter](value);
    else object[property] = value;
  };

  describe("Twilio", function () {
    it("should create an instance of Twilio", function () {
      // uncomment below and update the code to test Twilio
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be.a(NotehubJs.Twilio);
    });

    it('should have the property fleets (base name: "fleets")', function () {
      // uncomment below and update the code to test the property fleets
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });

    it('should have the property filter (base name: "filter")', function () {
      // uncomment below and update the code to test the property filter
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });

    it('should have the property timeout (base name: "timeout")', function () {
      // uncomment below and update the code to test the property timeout
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });

    it('should have the property accountSid (base name: "account_sid")', function () {
      // uncomment below and update the code to test the property accountSid
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });

    it('should have the property authToken (base name: "auth_token")', function () {
      // uncomment below and update the code to test the property authToken
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });

    it('should have the property to (base name: "to")', function () {
      // uncomment below and update the code to test the property to
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });

    it('should have the property from (base name: "from")', function () {
      // uncomment below and update the code to test the property from
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function () {
      // uncomment below and update the code to test the property message
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });

    it('should have the property throttleMs (base name: "throttle_ms")', function () {
      // uncomment below and update the code to test the property throttleMs
      //var instance = new NotehubJs.Twilio();
      //expect(instance).to.be();
    });
  });
});
